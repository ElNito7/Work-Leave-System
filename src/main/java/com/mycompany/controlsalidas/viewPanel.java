/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.controlsalidas;

import java.awt.Frame;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
/**
 *
 * @author Keloc
 */
public class viewPanel extends javax.swing.JPanel {

    /**
     * Creates new form viewPanel
     */
    public viewPanel() {
        initComponents();
        gui.initDefs(buscador);
        initTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filtros = new javax.swing.ButtonGroup();
        bg = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buscarBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaSalidas = new javax.swing.JTable();
        exportBtn = new javax.swing.JButton();
        buscador = new javax.swing.JComboBox<>();
        btnP = new javax.swing.JPanel();
        semanaBtn = new javax.swing.JRadioButton();
        mesBtn = new javax.swing.JRadioButton();
        todoBtn = new javax.swing.JRadioButton();

        setMinimumSize(new java.awt.Dimension(804, 588));
        setName("salP"); // NOI18N
        setPreferredSize(new java.awt.Dimension(804, 588));

        bg.setBackground(new java.awt.Color(204, 204, 204));
        bg.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("SALIDAS");

        buscarBtn.setText("Buscar");
        buscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtnActionPerformed(evt);
            }
        });

        tablaSalidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CONS.", "DEFENSOR", "FECHA", "HORA SALIDA", "TIPO DE DILIGENCIA", "LUGAR", "EXP. DE CONTROL", "TIEMPO APROX. DE DURACION"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaSalidas);

        exportBtn.setText("Exportar Tabla");
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        buscador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS" }));

        btnP.setBackground(new java.awt.Color(204, 204, 204));

        filtros.add(semanaBtn);
        semanaBtn.setForeground(new java.awt.Color(0, 0, 0));
        semanaBtn.setText("Esta Semana");
        semanaBtn.setActionCommand("SEMANA");
        semanaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semanaBtnActionPerformed(evt);
            }
        });

        filtros.add(mesBtn);
        mesBtn.setForeground(new java.awt.Color(0, 0, 0));
        mesBtn.setText("Este Mes");
        mesBtn.setActionCommand("MES");
        mesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesBtnActionPerformed(evt);
            }
        });

        filtros.add(todoBtn);
        todoBtn.setForeground(new java.awt.Color(0, 0, 0));
        todoBtn.setSelected(true);
        todoBtn.setText("Todo");
        todoBtn.setActionCommand("TODO");
        todoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnPLayout = new javax.swing.GroupLayout(btnP);
        btnP.setLayout(btnPLayout);
        btnPLayout.setHorizontalGroup(
            btnPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(todoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mesBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addComponent(semanaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnPLayout.setVerticalGroup(
            btnPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(todoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mesBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(semanaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(exportBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(517, 517, 517))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                .addGap(235, 235, 235))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(buscador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(14, 14, 14)))
                        .addComponent(buscarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscador))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buscarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exportBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addGap(106, 106, 106))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesBtnActionPerformed
        initTable();
    }//GEN-LAST:event_mesBtnActionPerformed

    private void semanaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semanaBtnActionPerformed
        initTable();
    }//GEN-LAST:event_semanaBtnActionPerformed

    private void todoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todoBtnActionPerformed
        initTable();
    }//GEN-LAST:event_todoBtnActionPerformed

    private void buscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBtnActionPerformed
        initTable();
    }//GEN-LAST:event_buscarBtnActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar como");

        // Filtrar para mostrar solo archivos .xlsx
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivos Excel (*.xlsx)", "xlsx"));
        
        Frame[] f = gui.getFrames();
        int userSelection = fileChooser.showSaveDialog(f[0]);
        
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            // Añadir la extensión .xlsx si no está presente
            if (!fileToSave.getAbsolutePath().endsWith(".xlsx")) {
                fileToSave = new File(fileToSave + ".xlsx");
            }

            ExcelExporter exporter = new ExcelExporter();
            try {
                exporter.exportTable(tablaSalidas, fileToSave.getAbsolutePath());
                JOptionPane.showMessageDialog(null, "Archivo guardado satisfacoriamente en: "+fileToSave.getAbsolutePath());
            } catch (IOException ex) {
                 ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_exportBtnActionPerformed


    public void initTable(){
        Session session = HibernateUtil.getSessionFactory().openSession();
        LocalDate d = LocalDate.now();
        LocalDate inicio;
        List<Salida> salidas;
        try{
            session.beginTransaction();
            //filtrar
            if (filtros.getSelection().getActionCommand().equals("MES")){
                inicio = d.minusDays(d.getDayOfMonth()-1);
                salidas = filtrar(inicio, d, session);
            } else if(filtros.getSelection().getActionCommand().equals("SEMANA")){
                inicio = d.minusDays(d.getDayOfWeek().getValue()-1);
                salidas = filtrar(inicio, d, session);
            } else {
                inicio = (LocalDate) session.createQuery("select min(s.fecha) from Salida s").uniqueResult();
                salidas = filtrar(inicio, d, session);
            }
            setTable(salidas);
            session.getTransaction().commit();
            session.close();
        } catch(Exception e){
            if (session.getTransaction() != null) {
                session.getTransaction().rollback();
            }
            e.printStackTrace();
        } finally {
                session.close();
        }
    }
    private List<Salida> filtrar(LocalDate inicio, LocalDate hoy, Session session){
        List<Salida> filtrada;
        if (buscador.getSelectedItem().toString().equals("TODOS")){
            filtrada = session.createQuery("From Salida where fecha between :fInicio and :fActual order by fecha desc", Salida.class)
                .setParameter("fInicio", inicio)
                .setParameter("fActual", hoy)
                .getResultList();
        } else {
            filtrada = session.createQuery("select s from Salida s join s.defensor d where s.fecha between :fInicio and :fActual and"+
                "(upper(d.nombre) like :b or upper(s.diligencia) like :b or upper(s.expediente) like :b or upper(s.lugar) like :b) order by s.fecha desc", Salida.class)
                .setParameter("fInicio", inicio)
                .setParameter("fActual", hoy)
                .setParameter("b", "%"+buscador.getSelectedItem().toString().toUpperCase()+"%")
                .getResultList();
        }
        return filtrada;
    }
    private void setTable(List<Salida> l){
        String[] tblH = {"CONS.","DEFENSOR","FECHA","HORA SALIDA","TIPO DE DILIGENCIA","LUGAR","EXPEDIENTE DE CONTROL","TIEMPO APROX. DE DURACIÓN"};
        DefaultTableModel model = new DefaultTableModel(tblH, 0);
        int i = 1;
        for(Salida s:l){
            Object[] row = {i, s.getDefId().getNombre().toUpperCase(), s.getFecha(), s.getHora(), s.getDiligencia().toUpperCase(), s.getLugar().toUpperCase(), s.getExpediente().toUpperCase(), s.getDuracion().toUpperCase()};
            model.addRow(row);
            i++;
        }
        tablaSalidas.setModel(model);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JPanel btnP;
    private javax.swing.JComboBox<String> buscador;
    private javax.swing.JButton buscarBtn;
    private javax.swing.JButton exportBtn;
    private javax.swing.ButtonGroup filtros;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton mesBtn;
    private javax.swing.JRadioButton semanaBtn;
    private javax.swing.JTable tablaSalidas;
    private javax.swing.JRadioButton todoBtn;
    // End of variables declaration//GEN-END:variables
}
